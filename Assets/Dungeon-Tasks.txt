!	Старые скрипты удалить в отдельной ветке, чтобы иметь возможность переключаться на старый вариант.
====================
ОБОЗНАЧЕНИЯ:
!	Соблюдать
?	Обдумать
*	Изменить/исправить
+	Добавить/сделать
-	Убрать
=	Проверить
====================
ТРЕБОВАНИЯ (в конце основного рефакторинга провести обзорный рефакторинг):
	К АРХИТЕКТУРЕ:
	!	Архитектура проекта должна быть в соответствии с принципами DDD
	!	Нормальные имена для пространств имен/классов/членов классов.
	!	Папки в проекте в соответствии с пространствами имен (глубокие подпапки в пространстве имен прописывать не стоит).
	!	Все ассеты проекта размещать в такой же иерархии папок, как и скрипты.
	!	Соблюдать порядок расположения членов в классах в соответствии с:
		https://stackoverflow.com/questions/150479/order-of-items-in-classes-fields-properties-constructors-methods
--------------------
	ИНЫЕ:
	!	Наследоваться от MonoBehaviour или ScriptableObject только там, где это действительно нужно.
	!	Классы для внутреннего использования в компоненте объявлять вложенными (можно как partial).
	!	Свойства только для нужных полей. Сериализовать поля только когда необходимо (доступ из редакторе, сохранение в JSON).
====================
СОМНЕНИЯ:
	В ПОСТРОЕНИИ ИЕРАРХИИ:
	?	Model.PlayerCharacter contains Mover
	?	Message находится в UI, а может нужно в Model или Infrastructure?
	?*	Inventory (уровень модели) работает с InventoryNotifier (уровень представления).
	?	InventorySlot (MODEL) обращается к SlotPresenter (PRESENTATION) для отображения. И это м.б. частой ситуацией. Считать ли это нарушением принципов DDD?
--------------------
	В НАИМЕНОВАНИИ:
	?	Mover not PlayerMover. Но PlayerAnimator not Animator т.к. есть Animator in UnityEngine. В итоге не полное единообразие.
	*	Environment => Tile (для всего)
====================
DI:
?+	Разобраться с Zenject/Extenject и добавить в проект.
?	Проанализировать порядок инициализации компонентов при запуске.
--------------------
EDITOR:
-	Все ненужные теги после рефакторинга.
*	Отсортировать слои после рефакторинга.
*	Атрибут для размещения списков/массивов в строку. Например, указать количество элементов в строке и их ширину.
*	FloatRange - свой редактор с ползунками
+	Удобные инструменты для создание уровней из тайлов в редакторе.
+	Код для Editior, чтобы выбранные спрайты для тайлов/предметов были видны как изображения, а не как поля.
?+	Хорошо бы написать скрипт, чтобы он ScriptableObject сам размещал (создавая, если нужно) в указанной (в соответствующем ScriptableObject CreateAssetMenu) иерархии
--------------------
SCENE:
*	Player.position.Z сделал равным 1, чтобы предметы подсвечивались, когда игрок стоит за ними. Когда отсортирую слои, тогда, возможно, вернуть в 0.
--------------------
GRAPHICS:
*	Объединить всю графику в один тайлсет.
+	Упаковать спрайты в атлас.
+*	Нарисовать и добавить спрайты сломанных предметов - для уведомлений о разрушении предмета подойдут идеально.
--------------------
MONOBEHAVIOURs:
+	UpdateManager, если много Update
--------------------
MODEL:
*	Флаг о разовом показе сообщения о скором разрушении предмета нужно вынести в слот рук, так как это к нему относится, а не к предмету.
*	Отделить модель инвентаря от действий около
--------------------
LEVEL:
?	Верно ли, что ссылка на Player хранится в Level?
--------------------
ANIMATIONS/STATES:
+	Анимацию прыжка конечная, переходящая в падение через время.
--------------------
MAIN MENU:
+*	Добавить главное меню, внеся исправления в старое.
--------------------
INPUT/CONTROLLER:
+	Аттрибут для компактного отображения массива клавиш (когда создам его).
?	Перевод на новую InputSystem
--------------------
PLAYER:
?	Направления: RightDirection. Добавить лицом к экрану/от экрана?
-	YCorrection. ! pivot.
--------------------
MOVEMENT SYSTEM:
*	Когда зажата кнопка прыжка, то происходит удвоенное приземление игрока (видно в логах).
*	Очень высокий прыжок, когда сбоку вплотную находится тайл (попробовать уменьшить GroundCheck).
*	Игрок иногда стоит с застрявшей анимацией движения.
--------------------
INTERACTION SYSTEM:
+	Можно сделать повреждения предметов/тайлов случайные в небольшом диапазоне, а не фиксированные.
*	Предупреждение о скором разрушении предмета в руках множественное, а не разовое, как должно быть.
*	После разрушения предмета в руках, его все равно можно использовать. Необходимо уничтожать его.
+	После разрушения тайла до его уничтожения с ним должно быть нельзя взаимодействовать, не должно быть его подсветки.
*	При наненсении повреждения и вспышки тайла, его endingColor в ColorBacklighter становиться словно чуть темнее изначального цвета подсветки.
?	Backligher в ElementMouseController проверяется на null, а не проверка на BlackStone. Как правильней?
+	Сообщение: Бесполезно пытаться разрушить черный камень!
+	Проверку на BlackStone и пресечение возможности взаимодействия с ним сразу.
--------------------
INVENTORY SYSTEM:
*	Сообщение о невозможности подобрать, когда инвентарь заполнен и не показывать его, если что-то все же подобрали.
*	Выложенные предметы становится невозможно подсветить и подобрать, когда за ними стоит игрок.
+	Показывать информацию о предметах в инвентаре.
*	Названия методов (полей) во всех классах привести в соответствие. Например, относительно подбора и выбрасывания предметов.
?	Inventory.SwitchOpeningState - наименование метода и его размещение?
--------------------
NOTIFICATION SYSTEM:
+	Текстовые описания сделать более юморными.
+	Отдельный модуль в редакторе со всеми сообщениями (из ElementMouseController, InventoryNotifier...)
*	Хорошо бы красиво сгруппировать все уведомления в одном месте.
--------------------
LOCALIZATION SYSTEM:
?*	Не должно быть повторов ключей в файлах локализации (проверять).
?+	Для локализуемых элементов, возможно, сделать интерфейс ILocalizationElement, обязывающий реализовать обработчик смены языка OnLanguageChanged.
?	Какая-то костыльная инициализация из Launcher-а Player-а, который уже инициализирует PlayerPanel.
?*	Возможно событие инициализации Localizer (загрузка языка) выделить в отдельное событие, а не как сейчас все происходит через событие смены языка.
?*	Подумать/попробовать сгруппировать весь текст в одном месте. Возможно, сгруппировать только сообщения.
*+	Закончить с уведомлениями и текстом. Пусть ключи текста будут там, где они используются.
+	Вместо перечисления LocalizedTextID написать полноценную систему для удобного выбора множества значений (а их потом будет очень много) из отсортированных групп.
?	Возможно отделить создание локализаций в редакторе от использования их в игре.

LocalizationsCreator:
{
	*	Label у Settings не расширяется при расширении окна.
	?+	Изменять и сохранять настройки Settings.
	+	При создании/открытии classifier/localization оставлять прежнее значение, если отменили операцию.
	+	Добавлять в classifier значения при добавлении их в локализацию.
	+	Реализовать автосохранение localization и classifier.
}
-------------------
UI:
+	Сделать возможность задавать форматирование строк и округление в инспекторе (для здоровья/прочности).
+	Вынести в отдельную сцену, после рефакторинга, которую подгружать для каждого уровня.
